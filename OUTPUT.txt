Parsing: ""
program()
	fail()
	empty()


Parsing: "opeN _th1z_1s_atest1 ;"
program()
	command()
		open_cmd()
			identifier(_th1z_1s_atest1)
	empty()


Parsing: "ope _th1z_1s_atest1 ;"
program()
	fail()
	empty()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Parsing: "close close_cmd_test;"
program()
	command()
		close_cmd()
			identifier(close_cmd_test)
	empty()


Parsing: "cloe close_cmd_test;"
program()
	fail()
	empty()


Parsing: "SAVE save_this;"
program()
	command()
		save_cmd()
			identifier(save_this)
	empty()


Parsing: "sAVE 2save_this;"
program()
	fail()
	empty()


Parsing: "exit;"
program()
	command()
		exit_cmd()
	empty()


Parsing: "sHOW a1234;"
program()
	command()
		show_cmd()
			atomic_expr()
				identifier(a1234)
	empty()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Parsing: "sHOW (_testname);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					atomic_expr()
						identifier(_testname)
	empty()


Parsing: "sHOW (selecT (a > b) test);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					selection()
						condition()
							conjunction()
								comparison(OP)
									operand()
										identifier(a)
									op(>)
									operand()
										identifier(b)
								empty()
							empty()
						atomic_expr()
							identifier(test)
	empty()


Parsing: "sHOW (selecT a > b test);"
program()
	fail()
	empty()


Parsing: "sHOW (selecT (a > b) (Select ((_ != operand)) test));"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					selection()
						condition()
							conjunction()
								comparison(OP)
									operand()
										identifier(a)
									op(>)
									operand()
										identifier(b)
								empty()
							empty()
						atomic_expr()
							expr()
								selection()
									condition()
										conjunction()
											comparison(CONDITION)
												condition()
													conjunction()
														comparison(OP)
															operand()
																identifier(_)
															op(!=)
															operand()
																identifier(operand)
														empty()
													empty()
												empty()
												empty()
											empty()
										empty()
									atomic_expr()
										identifier(test)
	empty()


Parsing: "sHOW (project (this, is, a , test) test22);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					projection()
						attribute_list()
							identifier(this)
							attribute_list()
								identifier(is)
								attribute_list()
									identifier(a)
									attribute_list()
										identifier(test)
										empty()
						atomic_expr()
							identifier(test22)
	empty()


Parsing: "sHOW (project () test22);"
program()
	fail()
	empty()


Parsing: "sHOW (project (this,) test22);"
program()
	fail()
	empty()


Parsing: "sHOW (rename (this, is, a , test) test1);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					renaming()
						attribute_list()
							identifier(this)
							attribute_list()
								identifier(is)
								attribute_list()
									identifier(a)
									attribute_list()
										identifier(test)
										empty()
						atomic_expr()
							identifier(test1)
	empty()


Parsing: "sHOW (rename (this, is, a ,) test1);"
program()
	fail()
	empty()


Parsing: "sHOW ((rename (this, is, a , test) test1)+(project (this, too, is , test2) test22));"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					union_op()
						atomic_expr()
							expr()
								renaming()
									attribute_list()
										identifier(this)
										attribute_list()
											identifier(is)
											attribute_list()
												identifier(a)
												attribute_list()
													identifier(test)
													empty()
									atomic_expr()
										identifier(test1)
						atomic_expr()
							expr()
								projection()
									attribute_list()
										identifier(this)
										attribute_list()
											identifier(too)
											attribute_list()
												identifier(is)
												attribute_list()
													identifier(test2)
													empty()
									atomic_expr()
										identifier(test22)
	empty()


Parsing: "sHOW (+(project (this, too, is , test2) test22));"
program()
	fail()
	empty()


Parsing: "sHOW (name-(project (this, too, is , test2) test22));"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					difference_op()
						atomic_expr()
							identifier(name)
						atomic_expr()
							expr()
								projection()
									attribute_list()
										identifier(this)
										attribute_list()
											identifier(too)
											attribute_list()
												identifier(is)
												attribute_list()
													identifier(test2)
													empty()
									atomic_expr()
										identifier(test22)
	empty()


Parsing: "sHOW (name-();"
program()
	fail()
	empty()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Parsing: "sHOW (name1*name2);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					product_op()
						atomic_expr()
							identifier(name1)
						atomic_expr()
							identifier(name2)
	empty()


Parsing: "sHOW (*);"
program()
	fail()
	empty()


Parsing: "CREATE TABLE animals(test1 integer, name VARCHAR(20), kind VARCHAR(8), years INTEGER, test2 varchar(9001)) PRIMARY KEY(name, kind);"
program()
	command()
		create_cmd()
			identifier(animals)
			typed_attribute_list()
				identifier(test1)
				type(INTEGER)
					empty()
				typed_attribute_list()
					identifier(name)
					type(VARCHAR)
						integer(20)
					typed_attribute_list()
						identifier(kind)
						type(VARCHAR)
							integer(8)
						typed_attribute_list()
							identifier(years)
							type(INTEGER)
								empty()
							typed_attribute_list()
								identifier(test2)
								type(VARCHAR)
									integer(9001)
								empty()
			attribute_list()
				identifier(name)
				attribute_list()
					identifier(kind)
					empty()
	empty()


Parsing: "CREATE TABLE animals(test1 integer, name VARCHAR(20), kind VARCHAR(8), years INTEGER,) PRIMARY KEY(name, kind);"
program()
	fail()
	empty()


Parsing: "update pirates set booty = "a_lot", rum = 0 where abc == abc && b != b || c >= c;"
program()
	command()
		update_cmd()
			identifier(pirates)
			update_list()
				identifier(booty)
				literal_token()
					string_token(a_lot)
				update_list()
					identifier(rum)
					literal_token()
						integer(0)
					empty()
			condition()
				conjunction()
					comparison(OP)
						operand()
							identifier(abc)
						op(==)
						operand()
							identifier(abc)
					conjunction()
						comparison(OP)
							operand()
								identifier(b)
							op(!=)
							operand()
								identifier(b)
						empty()
				condition()
					conjunction()
						comparison(OP)
							operand()
								identifier(c)
							op(>=)
							operand()
								identifier(c)
						empty()
					empty()
	empty()


Parsing: "update pirates set booty = "a_lot", where abc == abc && b != b || c >= c;"
program()
	fail()
	empty()


Parsing: "INSERT INTO species VALUES FROM RELATION project (kind) animals;"
program()
	command()
		insert_cmd()
			identifier(species)
			expr()
				projection()
					attribute_list()
						identifier(kind)
						empty()
					atomic_expr()
						identifier(animals)
	empty()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Parsing: "INSERT INTO species VALUES FROM RELATION project kind animals;"
program()
	fail()
	empty()


Parsing: "INSERT INTO animals VALUES FROM ("Tweety", "bird", 1, 44, "_testing56");"
program()
	command()
		insert_cmd()
			identifier(animals)
			insert_list()
				literal_token()
					string_token(Tweety)
				insert_list()
					literal_token()
						string_token(bird)
					insert_list()
						literal_token()
							integer(1)
						insert_list()
							literal_token()
								integer(44)
							insert_list()
								literal_token()
									string_token(_testing56)
								empty()
	empty()


Parsing: "INSERT INTO animals VALUES FROM (Tweety, "bird", 1, 44, "_testing56");"
program()
	fail()
	empty()
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Parsing: "deleTe FROM relation_name where 1 >= 2;"
program()
	command()
		delete_cmd()
			identifier(relation_name)
			condition()
				conjunction()
					comparison(OP)
						operand()
							literal_token()
								integer(1)
						op(>=)
						operand()
							literal_token()
								integer(2)
					empty()
				empty()
	empty()


Parsing: "deleTe FROM 3relation_name where 1 >= 2;"
program()
	fail()
	empty()


Parsing: "fgyuewagbujc72szwP8C FW 798 2qgj7u;"
program()
	fail()
	empty()


Parsing: "quesry_test1<-select(1 == 2 || 3 == "4")test_over;"
program()
	query()
		identifier(quesry_test1)
		expr()
			selection()
				condition()
					conjunction()
						comparison(OP)
							operand()
								literal_token()
									integer(1)
							op(==)
							operand()
								literal_token()
									integer(2)
						empty()
					condition()
						conjunction()
							comparison(OP)
								operand()
									literal_token()
										integer(3)
								op(==)
								operand()
									literal_token()
										string_token(4)
							empty()
						empty()
				atomic_expr()
					identifier(test_over)
	empty()


Parsing: "SAVE save_this;this is invalid;EXIT;"
program()
	command()
		save_cmd()
			identifier(save_this)
	program()
		fail()
		program()
			command()
				exit_cmd()
			empty()


Parsing: "SAVE save_this;this is invalid EXIT;"
program()
	command()
		save_cmd()
			identifier(save_this)
	program()
		fail()
		empty()


Parsing: "failure;SAVE save_this;this is invalid; exit<- _a*_b;"
program()
	fail()
	program()
		command()
			save_cmd()
				identifier(save_this)
		program()
			fail()
			program()
				query()
					identifier(exit)
					expr()
						product_op()
							atomic_expr()
								identifier(_a)
							atomic_expr()
								identifier(_b)
				empty()


Parsing: "exit; fail with no semicolon"
program()
	command()
		exit_cmd()
	program()
		fail()
		empty()


Parsing: "show (select ((5 > 2)||((1 == 2 || "a" != "b") && ("4" != 4))) testing_condition);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					selection()
						condition()
							conjunction()
								comparison(CONDITION)
									condition()
										conjunction()
											comparison(OP)
												operand()
													literal_token()
														integer(5)
												op(>)
												operand()
													literal_token()
														integer(2)
											empty()
										empty()
									empty()
									empty()
								empty()
							condition()
								conjunction()
									comparison(CONDITION)
										condition()
											conjunction()
												comparison(CONDITION)
													condition()
														conjunction()
															comparison(OP)
																operand()
																	literal_token()
																		integer(1)
																op(==)
																operand()
																	literal_token()
																		integer(2)
															empty()
														condition()
															conjunction()
																comparison(OP)
																	operand()
																		literal_token()
																			string_token(a)
																	op(!=)
																	operand()
																		literal_token()
																			string_token(b)
																empty()
															empty()
													empty()
													empty()
												conjunction()
													comparison(CONDITION)
														condition()
															conjunction()
																comparison(OP)
																	operand()
																		literal_token()
																			string_token(4)
																	op(!=)
																	operand()
																		literal_token()
																			integer(4)
																empty()
															empty()
														empty()
														empty()
													empty()
											empty()
										empty()
										empty()
									empty()
								empty()
						atomic_expr()
							identifier(testing_condition)
	empty()


Parsing: "show (select ((5 > 2)||((1 == 2 || "a" != "b") && "4" != 4)) testing_condition);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					selection()
						condition()
							conjunction()
								comparison(CONDITION)
									condition()
										conjunction()
											comparison(OP)
												operand()
													literal_token()
														integer(5)
												op(>)
												operand()
													literal_token()
														integer(2)
											empty()
										empty()
									empty()
									empty()
								empty()
							condition()
								conjunction()
									comparison(CONDITION)
										condition()
											conjunction()
												comparison(CONDITION)
													condition()
														conjunction()
															comparison(OP)
																operand()
																	literal_token()
																		integer(1)
																op(==)
																operand()
																	literal_token()
																		integer(2)
															empty()
														condition()
															conjunction()
																comparison(OP)
																	operand()
																		literal_token()
																			string_token(a)
																	op(!=)
																	operand()
																		literal_token()
																			string_token(b)
																empty()
															empty()
													empty()
													empty()
												conjunction()
													comparison(OP)
														operand()
															literal_token()
																string_token(4)
														op(!=)
														operand()
															literal_token()
																integer(4)
													empty()
											empty()
										empty()
										empty()
									empty()
								empty()
						atomic_expr()
							identifier(testing_condition)
	empty()


Parsing: "show (select (5 > 2||((1 == 2 || "a" != "b") && "4" != 4)) testing_condition);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					selection()
						condition()
							conjunction()
								comparison(OP)
									operand()
										literal_token()
											integer(5)
									op(>)
									operand()
										literal_token()
											integer(2)
								empty()
							condition()
								conjunction()
									comparison(CONDITION)
										condition()
											conjunction()
												comparison(CONDITION)
													condition()
														conjunction()
															comparison(OP)
																operand()
																	literal_token()
																		integer(1)
																op(==)
																operand()
																	literal_token()
																		integer(2)
															empty()
														condition()
															conjunction()
																comparison(OP)
																	operand()
																		literal_token()
																			string_token(a)
																	op(!=)
																	operand()
																		literal_token()
																			string_token(b)
																empty()
															empty()
													empty()
													empty()
												conjunction()
													comparison(OP)
														operand()
															literal_token()
																string_token(4)
														op(!=)
														operand()
															literal_token()
																integer(4)
													empty()
											empty()
										empty()
										empty()
									empty()
								empty()
						atomic_expr()
							identifier(testing_condition)
	empty()


Parsing: "show (select (5 > 2||1 == 2 || "a" != "b" && "4" != 4 || 4 < 3) testing_condition);"
program()
	command()
		show_cmd()
			atomic_expr()
				expr()
					selection()
						condition()
							conjunction()
								comparison(OP)
									operand()
										literal_token()
											integer(5)
									op(>)
									operand()
										literal_token()
											integer(2)
								empty()
							condition()
								conjunction()
									comparison(OP)
										operand()
											literal_token()
												integer(1)
										op(==)
										operand()
											literal_token()
												integer(2)
									empty()
								condition()
									conjunction()
										comparison(OP)
											operand()
												literal_token()
													string_token(a)
											op(!=)
											operand()
												literal_token()
													string_token(b)
										conjunction()
											comparison(OP)
												operand()
													literal_token()
														string_token(4)
												op(!=)
												operand()
													literal_token()
														integer(4)
											empty()
									condition()
										conjunction()
											comparison(OP)
												operand()
													literal_token()
														integer(4)
												op(<)
												operand()
													literal_token()
														integer(3)
											empty()
										empty()
						atomic_expr()
							identifier(testing_condition)
	empty()


Parsing: "^%$"
program()
	fail()
	empty()


Parsing: "query1<-test;update treble set a = 1, b = 2, c = 3, d = "d" where 1==2||3==4&&5!=6||7>=8;fail;exit;query2<-computer+science"
program()
	query()
		identifier(query1)
		expr()
			atomic_expr()
				identifier(test)
	program()
		command()
			update_cmd()
				identifier(treble)
				update_list()
					identifier(a)
					literal_token()
						integer(1)
					update_list()
						identifier(b)
						literal_token()
							integer(2)
						update_list()
							identifier(c)
							literal_token()
								integer(3)
							update_list()
								identifier(d)
								literal_token()
									string_token(d)
								empty()
				condition()
					conjunction()
						comparison(OP)
							operand()
								literal_token()
									integer(1)
							op(==)
							operand()
								literal_token()
									integer(2)
						empty()
					condition()
						conjunction()
							comparison(OP)
								operand()
									literal_token()
										integer(3)
								op(==)
								operand()
									literal_token()
										integer(4)
							conjunction()
								comparison(OP)
									operand()
										literal_token()
											integer(5)
									op(!=)
									operand()
										literal_token()
											integer(6)
								empty()
						condition()
							conjunction()
								comparison(OP)
									operand()
										literal_token()
											integer(7)
									op(>=)
									operand()
										literal_token()
											integer(8)
								empty()
							empty()
		program()
			fail()
			program()
				command()
					exit_cmd()
				program()
					query()
						identifier(query2)
						expr()
							union_op()
								atomic_expr()
									identifier(computer)
								atomic_expr()
									identifier(science)
					empty()


